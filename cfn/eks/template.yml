---
AWSTemplateFormatVersion: "2010-09-09"
Description: Template to deploy an EKS cluster
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Application Configuration"
        Parameters:
          - AppId
          - EnvironmentType
          - DataClassification
      - Label:
          default: "Cluster Configuration"
        Parameters:
          - ClusterName
          - KubVersion
          - VpcId
          - VpcCidr
          - Subnets
          - CertificateArn
      - Label:
          default: EKS Cluster
        Parameters:
          - ClusterName
      - Label:
          default: Worker Node Configuration
        Parameters:
          - NodeGroupName
          - NodeAutoScalingGroupMinSize
          - NodeAutoScalingGroupDesiredCapacity
          - NodeAutoScalingGroupMaxSize
          - NodeInstanceType
          - NodeImageIdSSMParam
          - NodeImageId
          - NodeVolumeSize
          - KeyName
          - BootstrapArguments
      - Label:
          default: Worker Network Configuration
        Parameters:
          - NodeGroupSubnets

Parameters:
  AppId:
    Type: String
    Description: PlanIT application ID number, excludes APP- (ex. "4646")
  EnvironmentType:
    Type: String
    Description: Environment type
    Default: NONPROD
    AllowedValues:
      - PROD
      - NONPROD
  DataClassification:
    Type: String
    Description: Data classification
    Default: NonConfidential
    AllowedValues:
      - NonConfidential
      - CompanyConfidential
      - HighlyRestricted
  ClusterName:
    Type: String
    Description: Name of the Cluster
  KubVersion:
    Type: String
    Default: 1.19
    Description: Kubernetes Version
    AllowedValues:
      - 1.19
  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: VPC to provision the application
  VpcCidr:
    Type: String
    Description: VPC Cidr ex. 172.23.46.0/23
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Application subnet IDs
  StageName:
    Type: String
    Default: dev
    Description: Name of the deployment stage
  AccountRole:
    Type: String
    Description: Admin role to manage eks cluster with kubectl
  BootstrapArguments:
    Type: String
    Default: ""
    Description: "Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami"

#  ClusterControlPlaneSecurityGroup:
#    Type: String
#    Description: The security group of the cluster control plane.

  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: The EC2 Key Pair to allow SSH access to the instances

  NodeAutoScalingGroupDesiredCapacity:
    Type: Number
    Default: 2
    Description: Desired capacity of Node Group ASG.

  NodeAutoScalingGroupMaxSize:
    Type: Number
    Default: 4
    Description: Maximum size of Node Group ASG. Set to at least 1 greater than NodeAutoScalingGroupDesiredCapacity.

  NodeAutoScalingGroupMinSize:
    Type: Number
    Default: 1
    Description: Minimum size of Node Group ASG.

  NodeGroupName:
    Type: String
    Description: Unique identifier for the Node Group.

  NodeImageId:
    Type: String
    Default: ""
    Description: (Optional) Specify your own custom image ID. This value overrides any AWS Systems Manager Parameter Store value specified above.

  NodeImageIdSSMParam:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: /aws/service/eks/optimized-ami/1.18/amazon-linux-2/recommended/image_id
    Description: AWS Systems Manager Parameter Store parameter of the AMI ID for the worker node instances.

  NodeInstanceType:
    Type: String
    Default: t3.medium
    AllowedValues:
      - a1.medium
      - a1.large
      - a1.xlarge
      - a1.2xlarge
      - a1.4xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5.metal
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
      - cc2.8xlarge
      - cr1.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - f1.2xlarge
      - f1.4xlarge
      - f1.16xlarge
      - g2.2xlarge
      - g2.8xlarge
      - g3s.xlarge
      - g3.4xlarge
      - g3.8xlarge
      - g3.16xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - hs1.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - m5.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
      - m5ad.large
      - m5ad.xlarge
      - m5ad.2xlarge
      - m5ad.4xlarge
      - m5ad.12xlarge
      - m5ad.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.12xlarge
      - m5d.16xlarge
      - m5d.24xlarge
      - m5d.metal
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - p3dn.24xlarge
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.12xlarge
      - g4dn.16xlarge
      - g4dn.metal
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.nano
      - t3a.micro
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - u-6tb1.metal
      - u-9tb1.metal
      - u-12tb1.metal
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
      - z1d.metal
    ConstraintDescription: Must be a valid EC2 instance type
    Description: EC2 instance type for the node instances

  NodeVolumeSize:
    Type: Number
    Default: 20
    Description: Node volume size

  NodeGroupSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The subnets where workers can be created.

  CertificateArn:
    Type: String
    Description: ARN of the Certificate ex. arn:aws:acm:us-east-1:XXXXXXXX:certificate/XXXXXX-XXXXXXX-XXXXXXX-XXXXXXXX
    
  EDOLoBNm:
    Type: String
    Description: Line Of Business Name
    AllowedValues:
      - daes
      - cl
      - pl
      - gb
      - ent
      - clm
      - dgtl
      - hf
      - hr
      - ops
      - hmco
      - 3pd
      - clact
      - clds
      - clbi
      - clmact
      - clmds
      - clmbi
      - plact
      - plds
      - plbi
      - gbact
      - gbds
      - gbbi
      - gs
  EDOApplNm:
    Type: String
    Description: Application Short Name, min length of 3, all caps
    AllowedPattern: ^[a-zA-Z0-9-.<>]{3,63}$
    MinLength: 3
  EDOSDLCEnv:
    Type: String
    Description: SDLC Environment Name
    Default: dev
    AllowedValues:
      - dev
      - qat
      - pte
      - ppd
      - prd
  EDOApplWEId:
    Type: String
    Description: Application Work Effort (WE) / PPM Id
    Default: NA

Rules:
  ValidateAppId:
    Assertions:
      - Assert: !Not [!Equals [!Ref AppId, ""]]
        AssertDescription: "AppId is required"
  ValidateVpcId:
    Assertions:
      - Assert: !Not [!Equals [!Ref VpcId, ""]]
        AssertDescription: "VpcId is required"
  ValidateAccountRole:
    Assertions:
      - Assert: !Not [!Equals [!Ref AccountRole, ""]]
        AssertDescription: "AccountRole is required"

Conditions:
    IsProd: !Equals [PROD, !Ref EnvironmentType]

Resources:
    EKSWorkerNodeInstanceRole:
      Type: "AWS::CloudFormation::Stack"
      UpdateReplacePolicy: Delete
      DeletionPolicy: Delete
      Properties:
        Parameters:
          AppId: !Ref AppId
          EnvironmentType: !Ref EnvironmentType
          DataClassification: !Ref DataClassification
          EDOLoBNm: !Ref EDOLoBNm
          EDOApplNm: !Ref EDOApplNm
          EDOSDLCEnv: !Ref EDOSDLCEnv
          EDOApplWEId: !Ref EDOApplWEId
        TemplateURL: !If
            - IsProd
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/PD/CatalogBucket:1}}/templates/eks_cluster/v2.0/instancerole.yaml"
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/NP/CatalogBucket:1}}/templates/eks_cluster/v2.0/instancerole.yaml"
    EKSClusterStack:
      Type: "AWS::CloudFormation::Stack"
      UpdateReplacePolicy: Delete
      DeletionPolicy: Delete
      Properties:
        Parameters:
          ClusterName: !Ref ClusterName
          DataClassification: !Ref DataClassification
          KubVersion: !Ref KubVersion
          StageName: !Ref StageName
          AppId: !Ref AppId
          VpcId: !Ref VpcId
          EnvironmentType: !Ref EnvironmentType
          Subnets: !Join [",", !Ref Subnets]
          EDOLoBNm: !Ref EDOLoBNm
          EDOApplNm: !Ref EDOApplNm
          EDOSDLCEnv: !Ref EDOSDLCEnv
          EDOApplWEId: !Ref EDOApplWEId
        TemplateURL: !If
            - IsProd
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/PD/CatalogBucket:1}}/templates/eks_cluster/v2.0/controlplane.yaml"
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/NP/CatalogBucket:1}}/templates/eks_cluster/v2.0/controlplane.yaml"
        TimeoutInMinutes: 20
    BootstrapCluster:
      Type: "Custom::BootstrapCluster"
      Properties:
        ServiceToken: "arn:aws:lambda:us-east-1:293176983353:function:eks-bootstrap-lambda-K8ManagerFunction-8FL37HJM6J2U"
        clusterName: !Ref ClusterName
        ClusterEndpoint: !GetAtt EKSClusterStack.Outputs.EksClusterEndpoint
        ClusterCACert: !GetAtt EKSClusterStack.Outputs.EksClusterCAData
        WorkerNodeRole: !GetAtt EKSWorkerNodeInstanceRole.Outputs.NodeInstanceRoleArn
        AccountId: !Ref "AWS::AccountId"
        Account_Role_Arn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/ServiceCatalogLaunchRole"
        CodebuildRole: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CodeBuildRole-${AWS::Region}"
        AccountRole: !Ref AccountRole
    CoreEKSWorkerStack:
      DependsOn:
        - EKSClusterStack
      Type: "AWS::CloudFormation::Stack"
      UpdateReplacePolicy: Delete
      DeletionPolicy: Delete
      Properties:
        Parameters:
          ClusterName: !Ref ClusterName
          ClusterControlPlaneSecurityGroup: !GetAtt EKSClusterStack.Outputs.EKSClusterSecurityGroupID
          NodeImageId: !Ref NodeImageId
          NodeGroupName: !Ref NodeGroupName
          BootstrapArguments: !Ref BootstrapArguments
          KeyName: !Ref KeyName
          NodeAutoScalingGroupDesiredCapacity: !Ref NodeAutoScalingGroupDesiredCapacity
          NodeAutoScalingGroupMaxSize: !Ref NodeAutoScalingGroupMaxSize
          NodeAutoScalingGroupMinSize: !Ref NodeAutoScalingGroupMinSize
          NodeImageIdSSMParam: !Ref NodeImageIdSSMParam
          NodeInstanceType: !Ref NodeInstanceType
          NodeVolumeSize: !Ref NodeVolumeSize
          NodeGroupSubnets: !Join [",", !Ref NodeGroupSubnets]
          VpcId: !Ref VpcId
          NodeInstanceRoleProfile: !GetAtt EKSWorkerNodeInstanceRole.Outputs.NodeInstanceRoleProfile
          AppId: !Ref AppId
          EnvironmentType: !Ref EnvironmentType
          DataClassification: !Ref DataClassification
          EDOLoBNm: !Ref EDOLoBNm
          EDOApplNm: !Ref EDOApplNm
          EDOSDLCEnv: !Ref EDOSDLCEnv
          EDOApplWEId: !Ref EDOApplWEId
        TemplateURL: !If
            - IsProd	
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/PD/CatalogBucket:1}}/templates/eks_cluster/v2.0/worknode.yaml"
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/NP/CatalogBucket:1}}/templates/eks_cluster/v2.0/worknode.yaml"
        TimeoutInMinutes: 15
    ManagementHelmChartStack:
      Type: "AWS::CloudFormation::Stack"
      UpdateReplacePolicy: Delete
      DeletionPolicy: Delete
      Properties:
        Parameters:
          AppId: !Ref AppId
          EnvironmentType: !Ref EnvironmentType
          DataClassification: !Ref DataClassification
          ClusterName: !Ref ClusterName
          KubVersion: !Ref KubVersion
          VpcId: !Ref VpcId
          VpcCidr: !Ref VpcCidr
          Subnets: !Join [",", !Ref Subnets]
          CertificateArn: !Ref CertificateArn
          EDOLoBNm: !Ref EDOLoBNm
          EDOApplNm: !Ref EDOApplNm
          EDOSDLCEnv: !Ref EDOSDLCEnv
          EDOApplWEId: !Ref EDOApplWEId
        TemplateURL: !If
            - IsProd
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/PD/CatalogBucket:1}}/templates/eks_cluster/v2.0/managementhelmchart.yaml"
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/NP/CatalogBucket:1}}/templates/eks_cluster/v2.0/managementhelmchart.yaml"
        TimeoutInMinutes: 15
    ManagementHelmChartTrigger:
      Type: "Custom::ManagementHelmChartTrigger"
      Properties:
        ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:APP-${AppId}-${ClusterName}-${EnvironmentType}-trigger"
        projectName: !Sub "APP-${AppId}-${ClusterName}-${EnvironmentType}-management-helmchart-codebuild-project"
        AppId: !Ref AppId
        EnvironmentType: !Ref EnvironmentType
        DataClassification: !Ref DataClassification
        ClusterName: !Ref ClusterName
        KubVersion: !Ref KubVersion
        VpcId: !Ref VpcId
        VpcCidr: !Ref VpcCidr
        Subnets: !Join [",", !Ref Subnets]
        CertificateArn: !Ref CertificateArn
      DependsOn:
        - CoreEKSWorkerStack
        - ManagementHelmChartStack
    OidcProvider:
      Type: "AWS::CloudFormation::Stack"
      UpdateReplacePolicy: Delete
      DeletionPolicy: Delete
      Properties:
        Parameters:
          EKSClusterName: !Ref ClusterName
          AppId: !Ref AppId
          EnvironmentType: !Ref EnvironmentType
          DataClassification: !Ref DataClassification
          EDOLoBNm: !Ref EDOLoBNm
          EDOApplNm: !Ref EDOApplNm
          EDOSDLCEnv: !Ref EDOSDLCEnv
          EDOApplWEId: !Ref EDOApplWEId
        TemplateURL: !If
            - IsProd
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/PD/CatalogBucket:1}}/templates/eks_cluster/v2.0/oidc-provider.yaml"
            - !Sub "https://s3.${AWS::Region}.amazonaws.com/{{resolve:ssm:/HIG/EDO/BASE/S3/NP/CatalogBucket:1}}/templates/eks_cluster/v2.0/oidc-provider.yaml"
        TimeoutInMinutes: 15
      DependsOn:
        - EKSClusterStack
        - CoreEKSWorkerStack
        - BootstrapCluster
